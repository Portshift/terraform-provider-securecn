// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PutEnvironmentsEnvIDReader is a Reader for the PutEnvironmentsEnvID structure.
type PutEnvironmentsEnvIDReader struct {
	Formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutEnvironmentsEnvIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutEnvironmentsEnvIDOK()
		if err := result.readResponse(response, consumer, o.Formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutEnvironmentsEnvIDUnauthorized()
		if err := result.readResponse(response, consumer, o.Formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutEnvironmentsEnvIDOK creates a PutEnvironmentsEnvIDOK with default headers values
func NewPutEnvironmentsEnvIDOK() *PutEnvironmentsEnvIDOK {
	return &PutEnvironmentsEnvIDOK{}
}

/*PutEnvironmentsEnvIDOK handles this case with default header values.

Success
*/
type PutEnvironmentsEnvIDOK struct {
	Payload *Environment
}

func (o *PutEnvironmentsEnvIDOK) Error() string {
	return fmt.Sprintf("[PUT /environments/{envId}][%d] putEnvironmentsEnvIdOK  %+v", 200, o.Payload)
}

func (o *PutEnvironmentsEnvIDOK) GetPayload() *Environment {
	return o.Payload
}

func (o *PutEnvironmentsEnvIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(Environment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutEnvironmentsEnvIDUnauthorized creates a PutEnvironmentsEnvIDUnauthorized with default headers values
func NewPutEnvironmentsEnvIDUnauthorized() *PutEnvironmentsEnvIDUnauthorized {
	return &PutEnvironmentsEnvIDUnauthorized{}
}

/*PutEnvironmentsEnvIDUnauthorized handles this case with default header values.

Unauthorized.
*/
type PutEnvironmentsEnvIDUnauthorized struct {
}

func (o *PutEnvironmentsEnvIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /environments/{envId}][%d] putEnvironmentsEnvIdUnauthorized ", 401)
}

func (o *PutEnvironmentsEnvIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
