// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APISecurityCdPolicyElement Api security cd policy element
// swagger:model ApiSecurityCdPolicyElement
type APISecurityCdPolicyElement struct {

	// The allowed api security profile for the pipeline
	// Required: true
	// Format: uuid
	APISecurityProfile *strfmt.UUID `json:"apiSecurityProfile"`

	// The action that should be taken on the pipeline
	// Required: true
	EnforcementOption EnforcementOption `json:"enforcementOption"`
}

// Validate validates this Api security cd policy element
func (m *APISecurityCdPolicyElement) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAPISecurityProfile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnforcementOption(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APISecurityCdPolicyElement) validateAPISecurityProfile(formats strfmt.Registry) error {

	if err := validate.Required("apiSecurityProfile", "body", m.APISecurityProfile); err != nil {
		return err
	}

	if err := validate.FormatOf("apiSecurityProfile", "body", "uuid", m.APISecurityProfile.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *APISecurityCdPolicyElement) validateEnforcementOption(formats strfmt.Registry) error {

	if err := m.EnforcementOption.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("enforcementOption")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *APISecurityCdPolicyElement) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APISecurityCdPolicyElement) UnmarshalBinary(b []byte) error {
	var res APISecurityCdPolicyElement
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
