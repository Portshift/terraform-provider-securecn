// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetKubernetesClustersKubernetesClusterIDNamespacesParams creates a new GetKubernetesClustersKubernetesClusterIDNamespacesParams object
// with the default values initialized.
func NewGetKubernetesClustersKubernetesClusterIDNamespacesParams() *GetKubernetesClustersKubernetesClusterIDNamespacesParams {
	var (
		includeScannableDefault = bool(false)
	)
	return &GetKubernetesClustersKubernetesClusterIDNamespacesParams{
		IncludeScannable: &includeScannableDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetKubernetesClustersKubernetesClusterIDNamespacesParamsWithTimeout creates a new GetKubernetesClustersKubernetesClusterIDNamespacesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetKubernetesClustersKubernetesClusterIDNamespacesParamsWithTimeout(timeout time.Duration) *GetKubernetesClustersKubernetesClusterIDNamespacesParams {
	var (
		includeScannableDefault = bool(false)
	)
	return &GetKubernetesClustersKubernetesClusterIDNamespacesParams{
		IncludeScannable: &includeScannableDefault,

		timeout: timeout,
	}
}

// NewGetKubernetesClustersKubernetesClusterIDNamespacesParamsWithContext creates a new GetKubernetesClustersKubernetesClusterIDNamespacesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetKubernetesClustersKubernetesClusterIDNamespacesParamsWithContext(ctx context.Context) *GetKubernetesClustersKubernetesClusterIDNamespacesParams {
	var (
		includeScannableDefault = bool(false)
	)
	return &GetKubernetesClustersKubernetesClusterIDNamespacesParams{
		IncludeScannable: &includeScannableDefault,

		Context: ctx,
	}
}

// NewGetKubernetesClustersKubernetesClusterIDNamespacesParamsWithHTTPClient creates a new GetKubernetesClustersKubernetesClusterIDNamespacesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetKubernetesClustersKubernetesClusterIDNamespacesParamsWithHTTPClient(client *http.Client) *GetKubernetesClustersKubernetesClusterIDNamespacesParams {
	var (
		includeScannableDefault = bool(false)
	)
	return &GetKubernetesClustersKubernetesClusterIDNamespacesParams{
		IncludeScannable: &includeScannableDefault,
		HTTPClient:       client,
	}
}

/*GetKubernetesClustersKubernetesClusterIDNamespacesParams contains all the parameters to send to the API endpoint
for the get kubernetes clusters kubernetes cluster ID namespaces operation typically these are written to a http.Request
*/
type GetKubernetesClustersKubernetesClusterIDNamespacesParams struct {

	/*IncludeScannable
	  If true - return all scannable namespaces

	*/
	IncludeScannable *bool
	/*KubernetesClusterID
	  SecureCn Kubernetes cluster ID

	*/
	KubernetesClusterID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get kubernetes clusters kubernetes cluster ID namespaces params
func (o *GetKubernetesClustersKubernetesClusterIDNamespacesParams) WithTimeout(timeout time.Duration) *GetKubernetesClustersKubernetesClusterIDNamespacesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get kubernetes clusters kubernetes cluster ID namespaces params
func (o *GetKubernetesClustersKubernetesClusterIDNamespacesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get kubernetes clusters kubernetes cluster ID namespaces params
func (o *GetKubernetesClustersKubernetesClusterIDNamespacesParams) WithContext(ctx context.Context) *GetKubernetesClustersKubernetesClusterIDNamespacesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get kubernetes clusters kubernetes cluster ID namespaces params
func (o *GetKubernetesClustersKubernetesClusterIDNamespacesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get kubernetes clusters kubernetes cluster ID namespaces params
func (o *GetKubernetesClustersKubernetesClusterIDNamespacesParams) WithHTTPClient(client *http.Client) *GetKubernetesClustersKubernetesClusterIDNamespacesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get kubernetes clusters kubernetes cluster ID namespaces params
func (o *GetKubernetesClustersKubernetesClusterIDNamespacesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncludeScannable adds the includeScannable to the get kubernetes clusters kubernetes cluster ID namespaces params
func (o *GetKubernetesClustersKubernetesClusterIDNamespacesParams) WithIncludeScannable(includeScannable *bool) *GetKubernetesClustersKubernetesClusterIDNamespacesParams {
	o.SetIncludeScannable(includeScannable)
	return o
}

// SetIncludeScannable adds the includeScannable to the get kubernetes clusters kubernetes cluster ID namespaces params
func (o *GetKubernetesClustersKubernetesClusterIDNamespacesParams) SetIncludeScannable(includeScannable *bool) {
	o.IncludeScannable = includeScannable
}

// WithKubernetesClusterID adds the kubernetesClusterID to the get kubernetes clusters kubernetes cluster ID namespaces params
func (o *GetKubernetesClustersKubernetesClusterIDNamespacesParams) WithKubernetesClusterID(kubernetesClusterID strfmt.UUID) *GetKubernetesClustersKubernetesClusterIDNamespacesParams {
	o.SetKubernetesClusterID(kubernetesClusterID)
	return o
}

// SetKubernetesClusterID adds the kubernetesClusterId to the get kubernetes clusters kubernetes cluster ID namespaces params
func (o *GetKubernetesClustersKubernetesClusterIDNamespacesParams) SetKubernetesClusterID(kubernetesClusterID strfmt.UUID) {
	o.KubernetesClusterID = kubernetesClusterID
}

// WriteToRequest writes these params to a swagger request
func (o *GetKubernetesClustersKubernetesClusterIDNamespacesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IncludeScannable != nil {

		// query param includeScannable
		var qrIncludeScannable bool
		if o.IncludeScannable != nil {
			qrIncludeScannable = *o.IncludeScannable
		}
		qIncludeScannable := swag.FormatBool(qrIncludeScannable)
		if qIncludeScannable != "" {
			if err := r.SetQueryParam("includeScannable", qIncludeScannable); err != nil {
				return err
			}
		}

	}

	// path param kubernetesClusterId
	if err := r.SetPathParam("kubernetesClusterId", o.KubernetesClusterID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
