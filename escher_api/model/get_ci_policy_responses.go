// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetCiPolicyReader is a Reader for the GetCiPolicy structure.
type GetCiPolicyReader struct {
	Formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCiPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCiPolicyOK()
		if err := result.readResponse(response, consumer, o.Formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCiPolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.Formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCiPolicyOK creates a GetCiPolicyOK with default headers values
func NewGetCiPolicyOK() *GetCiPolicyOK {
	return &GetCiPolicyOK{}
}

/*GetCiPolicyOK handles this case with default header values.

Success
*/
type GetCiPolicyOK struct {
	Payload *CiPolicy
}

func (o *GetCiPolicyOK) Error() string {
	return fmt.Sprintf("[GET /ciPolicy][%d] getCiPolicyOK  %+v", 200, o.Payload)
}

func (o *GetCiPolicyOK) GetPayload() *CiPolicy {
	return o.Payload
}

func (o *GetCiPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CiPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCiPolicyUnauthorized creates a GetCiPolicyUnauthorized with default headers values
func NewGetCiPolicyUnauthorized() *GetCiPolicyUnauthorized {
	return &GetCiPolicyUnauthorized{}
}

/*GetCiPolicyUnauthorized handles this case with default header values.

Unauthorized.
*/
type GetCiPolicyUnauthorized struct {
}

func (o *GetCiPolicyUnauthorized) Error() string {
	return fmt.Sprintf("[GET /ciPolicy][%d] getCiPolicyUnauthorized ", 401)
}

func (o *GetCiPolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
