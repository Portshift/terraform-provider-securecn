// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetCdPolicyReader is a Reader for the GetCdPolicy structure.
type GetCdPolicyReader struct {
	Formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCdPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCdPolicyOK()
		if err := result.readResponse(response, consumer, o.Formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCdPolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.Formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCdPolicyOK creates a GetCdPolicyOK with default headers values
func NewGetCdPolicyOK() *GetCdPolicyOK {
	return &GetCdPolicyOK{}
}

/*GetCdPolicyOK handles this case with default header values.

Success
*/
type GetCdPolicyOK struct {
	Payload []*CdPolicy
}

func (o *GetCdPolicyOK) Error() string {
	return fmt.Sprintf("[GET /cdPolicy][%d] getCdPolicyOK  %+v", 200, o.Payload)
}

func (o *GetCdPolicyOK) GetPayload() []*CdPolicy {
	return o.Payload
}

func (o *GetCdPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCdPolicyUnauthorized creates a GetCdPolicyUnauthorized with default headers values
func NewGetCdPolicyUnauthorized() *GetCdPolicyUnauthorized {
	return &GetCdPolicyUnauthorized{}
}

/*GetCdPolicyUnauthorized handles this case with default header values.

Unauthorized.
*/
type GetCdPolicyUnauthorized struct {
}

func (o *GetCdPolicyUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cdPolicy][%d] getCdPolicyUnauthorized ", 401)
}

func (o *GetCdPolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
