// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// WorkloadRuleScopeType workload rule scope type
// swagger:model WorkloadRuleScopeType
type WorkloadRuleScopeType string

const (

	// WorkloadRuleScopeTypeAnyRuleType captures enum value "AnyRuleType"
	WorkloadRuleScopeTypeAnyRuleType WorkloadRuleScopeType = "AnyRuleType"

	// WorkloadRuleScopeTypeClusterNameRuleType captures enum value "ClusterNameRuleType"
	WorkloadRuleScopeTypeClusterNameRuleType WorkloadRuleScopeType = "ClusterNameRuleType"

	// WorkloadRuleScopeTypeEnvironmentNameRuleType captures enum value "EnvironmentNameRuleType"
	WorkloadRuleScopeTypeEnvironmentNameRuleType WorkloadRuleScopeType = "EnvironmentNameRuleType"
)

// for schema
var workloadRuleScopeTypeEnum []interface{}

func init() {
	var res []WorkloadRuleScopeType
	if err := json.Unmarshal([]byte(`["AnyRuleType","ClusterNameRuleType","EnvironmentNameRuleType"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		workloadRuleScopeTypeEnum = append(workloadRuleScopeTypeEnum, v)
	}
}

func (m WorkloadRuleScopeType) validateWorkloadRuleScopeTypeEnum(path, location string, value WorkloadRuleScopeType) error {
	if err := validate.Enum(path, location, value, workloadRuleScopeTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this workload rule scope type
func (m WorkloadRuleScopeType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWorkloadRuleScopeTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
