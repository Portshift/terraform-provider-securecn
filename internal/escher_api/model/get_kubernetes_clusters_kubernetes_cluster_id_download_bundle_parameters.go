// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetKubernetesClustersKubernetesClusterIDDownloadBundleParams creates a new GetKubernetesClustersKubernetesClusterIDDownloadBundleParams object
// with the default values initialized.
func NewGetKubernetesClustersKubernetesClusterIDDownloadBundleParams() *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams {
	var (
		sendTelemetriesIntervalSecDefault = int64(30)
	)
	return &GetKubernetesClustersKubernetesClusterIDDownloadBundleParams{
		SendTelemetriesIntervalSec: &sendTelemetriesIntervalSecDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetKubernetesClustersKubernetesClusterIDDownloadBundleParamsWithTimeout creates a new GetKubernetesClustersKubernetesClusterIDDownloadBundleParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetKubernetesClustersKubernetesClusterIDDownloadBundleParamsWithTimeout(timeout time.Duration) *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams {
	var (
		sendTelemetriesIntervalSecDefault = int64(30)
	)
	return &GetKubernetesClustersKubernetesClusterIDDownloadBundleParams{
		SendTelemetriesIntervalSec: &sendTelemetriesIntervalSecDefault,

		timeout: timeout,
	}
}

// NewGetKubernetesClustersKubernetesClusterIDDownloadBundleParamsWithContext creates a new GetKubernetesClustersKubernetesClusterIDDownloadBundleParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetKubernetesClustersKubernetesClusterIDDownloadBundleParamsWithContext(ctx context.Context) *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams {
	var (
		sendTelemetriesIntervalSecDefault = int64(30)
	)
	return &GetKubernetesClustersKubernetesClusterIDDownloadBundleParams{
		SendTelemetriesIntervalSec: &sendTelemetriesIntervalSecDefault,

		Context: ctx,
	}
}

// NewGetKubernetesClustersKubernetesClusterIDDownloadBundleParamsWithHTTPClient creates a new GetKubernetesClustersKubernetesClusterIDDownloadBundleParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetKubernetesClustersKubernetesClusterIDDownloadBundleParamsWithHTTPClient(client *http.Client) *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams {
	var (
		sendTelemetriesIntervalSecDefault = int64(30)
	)
	return &GetKubernetesClustersKubernetesClusterIDDownloadBundleParams{
		SendTelemetriesIntervalSec: &sendTelemetriesIntervalSecDefault,
		HTTPClient:                 client,
	}
}

/*GetKubernetesClustersKubernetesClusterIDDownloadBundleParams contains all the parameters to send to the API endpoint
for the get kubernetes clusters kubernetes cluster ID download bundle operation typically these are written to a http.Request
*/
type GetKubernetesClustersKubernetesClusterIDDownloadBundleParams struct {

	/*KubernetesClusterID
	  SecureCn Kubernetes cluster ID

	*/
	KubernetesClusterID strfmt.UUID
	/*SendTelemetriesIntervalSec
	  The time interval for sending telemetries

	*/
	SendTelemetriesIntervalSec *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get kubernetes clusters kubernetes cluster ID download bundle params
func (o *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams) WithTimeout(timeout time.Duration) *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get kubernetes clusters kubernetes cluster ID download bundle params
func (o *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get kubernetes clusters kubernetes cluster ID download bundle params
func (o *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams) WithContext(ctx context.Context) *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get kubernetes clusters kubernetes cluster ID download bundle params
func (o *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get kubernetes clusters kubernetes cluster ID download bundle params
func (o *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams) WithHTTPClient(client *http.Client) *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get kubernetes clusters kubernetes cluster ID download bundle params
func (o *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithKubernetesClusterID adds the kubernetesClusterID to the get kubernetes clusters kubernetes cluster ID download bundle params
func (o *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams) WithKubernetesClusterID(kubernetesClusterID strfmt.UUID) *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams {
	o.SetKubernetesClusterID(kubernetesClusterID)
	return o
}

// SetKubernetesClusterID adds the kubernetesClusterId to the get kubernetes clusters kubernetes cluster ID download bundle params
func (o *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams) SetKubernetesClusterID(kubernetesClusterID strfmt.UUID) {
	o.KubernetesClusterID = kubernetesClusterID
}

// WithSendTelemetriesIntervalSec adds the sendTelemetriesIntervalSec to the get kubernetes clusters kubernetes cluster ID download bundle params
func (o *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams) WithSendTelemetriesIntervalSec(sendTelemetriesIntervalSec *int64) *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams {
	o.SetSendTelemetriesIntervalSec(sendTelemetriesIntervalSec)
	return o
}

// SetSendTelemetriesIntervalSec adds the sendTelemetriesIntervalSec to the get kubernetes clusters kubernetes cluster ID download bundle params
func (o *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams) SetSendTelemetriesIntervalSec(sendTelemetriesIntervalSec *int64) {
	o.SendTelemetriesIntervalSec = sendTelemetriesIntervalSec
}

// WriteToRequest writes these params to a swagger request
func (o *GetKubernetesClustersKubernetesClusterIDDownloadBundleParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param kubernetesClusterId
	if err := r.SetPathParam("kubernetesClusterId", o.KubernetesClusterID.String()); err != nil {
		return err
	}

	if o.SendTelemetriesIntervalSec != nil {

		// query param sendTelemetriesIntervalSec
		var qrSendTelemetriesIntervalSec int64
		if o.SendTelemetriesIntervalSec != nil {
			qrSendTelemetriesIntervalSec = *o.SendTelemetriesIntervalSec
		}
		qSendTelemetriesIntervalSec := swag.FormatInt64(qrSendTelemetriesIntervalSec)
		if qSendTelemetriesIntervalSec != "" {
			if err := r.SetQueryParam("sendTelemetriesIntervalSec", qSendTelemetriesIntervalSec); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
