// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// PostCdPolicyReader is a Reader for the PostCdPolicy structure.
type PostCdPolicyReader struct {
	Formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCdPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostCdPolicyCreated()
		if err := result.readResponse(response, consumer, o.Formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostCdPolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.Formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostCdPolicyCreated creates a PostCdPolicyCreated with default headers values
func NewPostCdPolicyCreated() *PostCdPolicyCreated {
	return &PostCdPolicyCreated{}
}

/*PostCdPolicyCreated handles this case with default header values.

Added
*/
type PostCdPolicyCreated struct {
	Payload *CdPolicy
}

func (o *PostCdPolicyCreated) Error() string {
	return fmt.Sprintf("[POST /cdPolicy][%d] postCdPolicyCreated  %+v", 201, o.Payload)
}

func (o *PostCdPolicyCreated) GetPayload() *CdPolicy {
	return o.Payload
}

func (o *PostCdPolicyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CdPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCdPolicyUnauthorized creates a PostCdPolicyUnauthorized with default headers values
func NewPostCdPolicyUnauthorized() *PostCdPolicyUnauthorized {
	return &PostCdPolicyUnauthorized{}
}

/*PostCdPolicyUnauthorized handles this case with default header values.

Unauthorized.
*/
type PostCdPolicyUnauthorized struct {
}

func (o *PostCdPolicyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cdPolicy][%d] postCdPolicyUnauthorized ", 401)
}

func (o *PostCdPolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
