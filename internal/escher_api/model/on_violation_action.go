// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// OnViolationAction on violation action
// swagger:model OnViolationAction
type OnViolationAction string

const (

	// OnViolationActionDETECT captures enum value "DETECT"
	OnViolationActionDETECT OnViolationAction = "DETECT"

	// OnViolationActionBLOCK captures enum value "BLOCK"
	OnViolationActionBLOCK OnViolationAction = "BLOCK"
)

// for schema
var onViolationActionEnum []interface{}

func init() {
	var res []OnViolationAction
	if err := json.Unmarshal([]byte(`["DETECT","BLOCK","ENFORCE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		onViolationActionEnum = append(onViolationActionEnum, v)
	}
}

func (m OnViolationAction) validateOnViolationActionEnum(path, location string, value OnViolationAction) error {
	if err := validate.Enum(path, location, value, onViolationActionEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this on violation action
func (m OnViolationAction) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOnViolationActionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
